---
grails:
    profile: web
    codegen:
        defaultPackage: apps
    spring:
        transactionManagement:
            proxies: false
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false

# Spring Actuator Endpoints are Disabled by Default
endpoints:
    enabled: false
    jmx:
        enabled: true

---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none
endpoints:
    jmx:
        unique-names: true

---
grails:
    mail:
        host: "smtp.gmail.com"
        port: 465
        username: "agiledevelopment.leanstartup@gmail.com"
        password: "Brahmananda1!"
        props:
            mail:
                smtp:
                    auth: true
                    socketFactory:
                        port: 465
                        class: "javax.net.ssl.SSLSocketFactory"
                        fallback: false
---
grails:
    controllers:
        upload:
          maxFileSize: 26214400
          maxRequestSize: 26214400
---
grails:
    mongodb:
        host: "localhost"
        port: 27017
        username: ""
        password: ""
        databaseName: "test"
---        
hibernate:
    cache:
        queries: false
        use_second_level_cache: true
        use_query_cache: false
        region.factory_class: org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
        dialect: net.kaleidos.hibernate.PostgresqlExtensionsDialect

dataSource:
    pooled: true
    jmxExport: true
    //driverClassName: org.h2.Driver
    driverClassName: org.postgresql.Driver
    username: "postgres"
    //password: "Brahmananda1"
    url: jdbc:postgresql://localhost:5432/postgres
    dbCreate: create-drop

environments:
    development:
        dataSource:
            dbCreate: update
            driverClassName: org.h2.Driver
            url: jdbc:h2:file:./pixel2Db;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
    test:
        dataSource:
            dbCreate: create-drop
            driverClassName: org.h2.Driver
            url: jdbc:h2:mem:pixel2Db;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
    production:
        dataSource:
            dbCreate: update
            driverClassName: org.h2.Driver
            url: jdbc:h2:file:./pixel2Db;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
